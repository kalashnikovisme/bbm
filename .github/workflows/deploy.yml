name: Deploy Bot

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply-and-destroy'
        type: choice
        options:
          - apply-and-destroy
          - apply-only
          - destroy-only

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
    
    - name: Create terraform.tfvars
      working-directory: ./terraform
      run: |
        cat > terraform.tfvars << EOF
        do_token              = "${{ secrets.DO_TOKEN }}"
        nba_api_key          = "${{ secrets.NBA_API_KEY }}"
        telegram_bot_token   = "${{ secrets.TELEGRAM_BOT_TOKEN }}"
        telegram_chat_id     = "${{ secrets.TELEGRAM_CHAT_ID }}"
        ssh_private_key_path = "~/.ssh/id_rsa"
        ssh_key_name         = "${{ secrets.SSH_KEY_NAME || '' }}"
        ssh_fingerprint      = "${{ secrets.SSH_FINGERPRINT || '' }}"
        EOF

    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
    
    - name: Terraform Apply
      if: github.event.inputs.action == 'apply-and-destroy' || github.event.inputs.action == 'apply-only'
      working-directory: ./terraform
      run: terraform apply -auto-approve
    
    - name: Terraform Destroy
      if: github.event.inputs.action == 'apply-and-destroy' || github.event.inputs.action == 'destroy-only'
      working-directory: ./terraform
      run: terraform destroy -auto-approve
